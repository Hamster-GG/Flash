const readlineSync = require("readline-sync");
const fs = require("fs");

class View {
  static choiceTheme() {
    //–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –≤—ã–±–æ—Ä —Ç–µ–º—ã(—Ñ–∞–π–ª .txt)
    const userName = readlineSync.question("–î—Ä—É–≥ –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? ü§î\n");
    console.log("–ü—Ä–∏–≤–µ—Ç " + userName + " ü§ü");
    const gamer = userName;

    const txtFile = [
      `${__dirname}/topics/nighthawk_flashcard_data.txt`,
      `${__dirname}/topics/otter_flashcard_data.txt`,
      `${__dirname}/topics/raccoon_flashcard_data.txt`,
    ];
    const choiceTheme = require("readline-sync"),
      animals = ["–Ø—Å—Ç—Ä–µ–±—ã", "–í—ã–¥—Ä—ã", "–ï–Ω–æ—Ç—ã"],
      index = readlineSync.keyInSelect(
        animals,
        "–ö–∞–∫–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ —Ç—ã —Ö–æ—á–µ—à—å –≤—ã–±—Ä–∞—Ç—å? ü§î\n"
      );
    console.log("–°—É–ø–µ—Ä! " + animals[index] + ", –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä üëç\n");

    return txtFile[[index]];
  }

  static questionAnswer(questions, answers) {
    let coins = 0;
    for (let i = 0; i <= questions.length; i++) {
      if (i === questions.length) {
        this.finalFar(coins);
        return;
      } else {
        let answersI = readlineSync.question(`${questions[i]}\n`);
        if (answersI === answers[i]) {
          coins = coins + 1;
          console.log("–î—Ä—É–∂–∏—â–µ —ç—Ç–æ –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç + 1 –∑–æ–ª–æ—Ç—ã—Ö üí∞");
        } else {
          console.log("–î—Ä—É–∂–∏—â–µ –Ω–µ –≤ —ç—Ç–æ—Ç —Ä–∞–∑ üëéüëéüëé\n");
        }
      }
    }
  }

  static finalFar(coins) {
    console.log(
      " —Ç—ã –∫—Ä—É—Ç–æ –ø—Ä–æ—Ö–æ–¥–∏–ª –∏–≥—Ä—É üí™ –∏ —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª - " +
        `${coins}` +
        " –∑–æ–ª–æ—Ç—ã—Ö üí∞"
    );
  }
}

module.exports = View;
